{"version":3,"sources":["image/search.svg","image/CDN.svg","image/hot.svg","image/index.equalizer-bars-loader.svg","pages/menu/index.js","pages/home/index.js","pages/guide/index.js","module/request/index.js","pages/top/index.js","pages/top/detail.js","component/loading/index.js","pages/playlist/index.js","pages/playlist/detail.js","routes.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","react_default","a","createElement","className","href","alt","src","SEARCH","Link","to","CDN","HOT","Component","Home","children","this","props","pages_menu","Guide","request","url","options","arguments","length","undefined","URL","concat","axios","Object","assign","then","response","status","Error","data","code","catch","error","message","Top","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","list","loading","topDetail","bind","assertThisInitialized","setState","REQ","console","_context","t0","id","history","push","_this2","_this$state","map","item","index","key","onClick","name","updateFrequency","withRouter","TopDetail","log","match","params","Loading","LOADING","PlayList","sub","playlists","selectCatgery","setLoading","requestPlayList","event","value","currentTarget","cat","_context2","bool","style","width","src_component_loading","onChange","chunk","playListDetail","coverImgUrl","creator","nickname","playCount","PlayListDetail","privileges","playlist","tracks","music","trackDetail","songs","song","ar","join","Routes","BrowserRouter","pages_home","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8854198d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.d5b40433.svg\";","module.exports = __webpack_public_path__ + \"static/media/CDN.63e1e185.svg\";","module.exports = __webpack_public_path__ + \"static/media/hot.692e71ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/index.equalizer-bars-loader.d6c35e14.svg\";","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './index.scss';\nimport SEARCH from '../../image/search.svg';\nimport CDN from '../../image/CDN.svg';\nimport HOT from '../../image/hot.svg';\n\nclass Menu extends Component {\n    render() {\n        return <div>\n            <div className='menu'>\n                <ul>\n                    <li>\n                        <a href='/'>\n                            <img alt=\"\" src={SEARCH} />\n                            SEARCH\n                        </a>\n                    </li>\n                    <li>\n                        <Link to='/playList'>\n                            <img alt=\"\" src={CDN} />\n                            PLAYLIST\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/top'>\n                            <img alt=\"\" src={HOT} />\n                            TOP\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            <div className='menu-space'></div>\n        </div>\n    }\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport Menu from '../menu';\nimport './index.scss';\n\nclass Home extends Component {\n    render() {\n        const {\n            children,\n        } = this.props;\n        return <div className='home-layout'>\n            <Menu />\n            {children}\n        </div>;\n    }\n}\n\nexport default Home;\n","import React, {Component} from 'react'\n\nclass Guide extends Component {\n    render() {\n        return <div>\n            guide\n        </div>\n    }\n}\n\nexport default Guide;\n","import axios from 'axios';\n\nexport default function (url, options = {}) {\n\n    const URL = `http://localhost:4000${url}`;\n\n    return axios(Object.assign({ url: URL }, options)).then(response => {\n        if (response.status < 200 || response.status > 300) {\n            throw new Error('requset error');\n        }\n        if (!response.data) {\n            throw new Error('response nothing');\n        }\n        const {\n            code,\n        } = response.data;\n        if (code === 200) {\n            return response.data;\n        } else {\n            throw new Error('requset error');\n        }\n    }).catch(error => {\n        throw new Error(error.message);\n    });\n}\n","import React, { Component } from 'react';\nimport REQ from '../../module/request';\nimport { withRouter } from \"react-router\";\nimport './index.scss';\n\nclass Top extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            loading: false,\n        };\n        this.topDetail = this.topDetail.bind(this);\n    }\n    async componentDidMount() {\n        try {\n            this.setState({\n                loading: true,\n            });\n            const response = await REQ('/toplist');\n            this.setState({\n                list: response.list,\n                loading: false,\n            });\n        } catch (error) {\n            this.setState({\n                loading: false,\n            });\n            console.error(error);\n        }\n    }\n    topDetail(data) {\n        const {\n            id,\n        } = data;\n        this.props.history.push(`topDetail/${id}`);\n    }\n    render() {\n        const {\n            list,\n            loading,\n        } = this.state;\n        return <div className='top-container'>\n            {loading && 'loading'}\n            {list.map((item, index) => {\n                return <button\n                    // style={{ backgroundImage: `url(${item.coverImgUrl})` }}\n                    className='top-item'\n                    key={item.id}\n                    onClick={() => this.topDetail(item)}\n                >\n                    <div className='top-desc'>\n                        <p>\n                            {item.name}\n                        </p>\n                        <p>\n                            {item.updateFrequency}\n                        </p>\n                    </div>\n                </button>\n            })}\n        </div>;\n    }\n}\n\nexport default withRouter(Top);\n","import React, { Component } from 'react';\nimport REQ from '../../module/request';\n\nclass TopDetail extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n    }\n    async componentDidMount() {\n        const id = this.props.match.params.id;\n        try {\n            const response = await REQ(`/toplist/detail?id=${id}`);\n            console.log(response);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n    render() {\n        return <div>\n            top detail\n        </div>;\n    }\n}\n\nexport default TopDetail;\n","import React, {Component} from 'react';\nimport LOADING from '../../image/index.equalizer-bars-loader.svg';\nimport './index.scss';\n\nclass Loading extends Component {\n    render() {\n        return <div className='loading'>\n            <img alt='' src={LOADING} />\n        </div>;\n    }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport REQ from '../../module/request';\nimport chunk from 'lodash/chunk';\nimport { withRouter } from \"react-router\";\nimport './index.scss';\nimport Loading from '../../component/loading';\n\nclass PlayList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sub: [],\n            playlists: [],\n            loading: false,\n        };\n        this.selectCatgery = this.selectCatgery.bind(this);\n    }\n    async componentDidMount() {\n        try {\n            this.setLoading(true);\n            const response = await REQ('/playlist/catlist');\n            this.setLoading(false);\n            const {\n                sub,\n            } = response;\n            this.setState({\n                sub,\n            });\n            this.requestPlayList(sub[0]['name']);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n    selectCatgery(event) {\n        const value = event.currentTarget.value;\n        this.requestPlayList(value);\n    }\n    async requestPlayList(cat) {\n        try {\n            this.setLoading(true);\n            const response = await REQ(`/top/playlist?cat=${cat}&limit=20`);\n            this.setLoading(false);\n            const {\n                playlists,\n            } = response;\n            this.setState({\n                playlists,\n            });\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n    playListDetail(data) {\n        const {\n            id,\n        } = data;\n        this.props.history.push(`/playListDetail/${id}`);\n    }\n    setLoading(bool) {\n        this.setState({\n            loading: bool,\n        });\n    }\n    render() {\n        const {\n            sub,\n            playlists,\n            loading,\n        } = this.state;\n        return <div style={{ width: '100%' }}>\n            {loading && <Loading />}\n            <select\n                onChange={this.selectCatgery}\n            >\n                {sub.map((item, index) =>\n                    <option\n                        key={index}>\n                        {item.name}\n                    </option>)}\n            </select>\n            <div className='play-list-container'>\n                {chunk(playlists, 2).map((data, index) =>\n                    <div className='play-list-item' key={index}>\n                        {\n                            data.map(item =>\n                                <button\n                                    key={item.id}\n                                    onClick={() => this.playListDetail(item)}\n                                >\n                                    <img alt='' src={item.coverImgUrl} />\n                                    <div className='play-list-desc'>\n                                        <p>{item.name}</p>\n                                        <p>{item.creator.nickname}</p>\n                                        <p>{item.playCount / 1000}K PLAYED</p>\n                                    </div>\n                                </button>\n                            )\n                        }\n                    </div>\n                )}\n            </div>\n        </div>\n    }\n}\n\nexport default withRouter(PlayList);\n","import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport REQ from '../../module/request';\nimport './detail.scss';\n\nclass PlayListDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            privileges: [],\n            playlist: {\n                tracks: [],\n            },\n            music: '',\n        };\n        this.trackDetail = this.trackDetail.bind(this);\n    }\n    async componentDidMount() {\n        try {\n            const id = this.props.match.params.id;\n            const response = await REQ(`/playlist/detail?id=${id}`);\n            const {\n                privileges,\n                playlist,\n            } = response;\n            this.setState({\n                privileges,\n                playlist,\n            });\n            console.log(response)\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n    async trackDetail(data) {\n        try {\n            const response = await REQ(`/song/detail?ids=${data.id}`);\n            const song = await REQ(`/song/url?id=${response.songs[0]['id']}`);\n            console.log(song);\n            this.setState({\n                music: song.data[0]['url']\n            });\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n    render() {\n        const {\n            playlist,\n            music,\n        } = this.state;\n        return <div style={{ width: '100%' }}>\n            <audio  src={music} />\n            <div className='play-list-detail-list'>\n                {playlist.tracks.map((item, index) => <button\n                    key={item.id}\n                    onClick={() => this.trackDetail(item)}\n                >\n                    <p className='play-list-detail-list-name'>\n                        <span>{index + 1}</span>\n                        {item.name}\n                    </p>\n                    <p className='play-list-detail-list-singer'>\n                        {item.ar.map(ar => ar.name).join(' / ')}\n                    </p>\n                </button>)}\n            </div>\n        </div>;\n    }\n}\n\nexport default withRouter(PlayListDetail);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Home from './pages/home';\nimport Guide from './pages/guide';\nimport Top from './pages/top';\nimport TopDetail from './pages/top/detail';\nimport PlayList from './pages/playlist';\nimport PlayListDetail from './pages/playlist/detail';\n\nconst Routes = () => (\n    <Router>\n        <Home>\n            <Route exact path=\"/\" component={Guide} />\n            <Route path=\"/top\" component={Top} />\n            <Route path=\"/topDetail/:id\" component={TopDetail} />\n            <Route path=\"/playList\" component={PlayList} />\n            <Route path=\"/playListDetail/:id\" component={PlayListDetail} />\n        </Home>\n    </Router>\n);\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Route from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Route />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}